const { sendBotMessage } = require("../../../messageSender");
const { setUserStage, getNomeUsuario } = require("../../../redisService");
const OpenAI = require("openai");

require("dotenv").config();
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

const { estaBloqueado, setBloqueio } = require("../../../utils/filaDeMensagem/bloqueioTemporario");


// üîπ Handlers
const handlers = {
  preAprovacao: async (sender, args) => {
    const { pushName } = args;
  
    await setUserStage(sender, "open_ai_services_duvidas_boleto");
    const nome = await getNomeUsuario(sender);
    // await sendBotMessage (sender, `${nome} aguarda um minutinho que eu vou verificar e ja volto aqui`)

    setBloqueio(sender);

  
    const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));
    await delay(100); // ‚è≥ Espera 20 segundos
  
    const frases = [`üî• Corre na loja, ${nome}! üöÄ Sua an√°lise bateu aprova√ß√£o alt√≠ssima. ‚è∞ Que hor√°rio voc√™ consegue chegar? Ou voce gostaria de tirar duvidas sobre modelos ou financiamento?üíú`,
                    `üöÄ Corre na loja, ${nome}! ü§© Chegou agora: grau de aprova√ß√£o l√° em cima. üïí Quando pode vir?Ou voce gostaria de tirar duvidas sobre modelos ou financiamento?üíú`,
                  `üî•Corre na loja, ${nome}! üî• Cadastro liberado com alta aprova√ß√£o. üóì Qual hor√°rio fica melhor¬†pra¬†voc√™¬†hoje? Ou voce gostaria de tirar duvidas sobre modelos ou financiamento?üíú`
    ]
    const fraseEscolhida = frases[Math.floor(Math.random() * frases.length)];
    return await sendBotMessage(sender,fraseEscolhida);
  },
  naoDeuDados: async (sender) => {
    await setUserStage(sender, "open_ai_services_boleto_decisao_2");
    const nome = await getNomeUsuario(sender);   
    const frases = [`${nome} para avan√ßar j√° com valores e condi√ß√µes, preciso fazer uma pr√©‚Äëan√°lise: nome completo, CPF e endere√ßo. Com isso, libero sua aprova√ß√£o rapidinho. üíú`,
                     `Claro ${nome}! Para liberar a simula√ß√£o e tirar todas as suas d√∫vidas, preciso rodar a pr√©-an√°lise: nome completo, CPF e endere√ßo. Com esses dados j√° verifico sua aprova√ß√£o. üíú`,
                     `${nome} s√≥ falta a pr√©-an√°lise! Envie nome completo, CPF e endere√ßo e destravo sua aprova√ß√£o rapidinho, a√≠ seguimos com todos¬†os¬†detalhes.¬†üíú`
    ]
    const fraseEscolhida = frases[Math.floor(Math.random() * frases.length)];
    return await sendBotMessage(
      sender,fraseEscolhida);
  }
};

// üîπ Apenas duas fun√ß√µes
const functions = [
  {
    name: "preAprovacao",
    description: "Usu√°rio forneceu nome completo, CPF e/ou /data de nascimento. Nome e cpf precisam conter. Data de nascimento e endere√ßo pode conter um ou outro.",
    parameters: {
      type: "object",
      properties: {
        pushName: {
          type: "string",
          description: "Se conter nome e CPF esta autorizado a chamar a fun√ß√£o"
        }
      },
      required: ["pushName"]
    }
  },
  {
    name: "naoDeuDados",
    description: "Usu√°rio ainda n√£o enviou os dados necess√°rios."
  }
];

// üîπ Agente principal
const openAiServicesBoletoDecisao2 = async ({ sender, msgContent = "", pushName = "" }) => {
  if (estaBloqueado(sender)) {
    console.log(`‚è≥ Ignorando mensagem de ${sender} ainda em per√≠odo de bloqueio.`);
    return;
  }
  
  // Dentro de preAprovacao:
  setBloqueio(sender); // ativa bloqueio
  try {
    await setUserStage(sender, "open_ai_services_boleto_decisao_2");

    const completion = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content:  `
          Voc√™ √© Anna, assistente da Vertex Store.
          
          Sua fun√ß√£o √© simples: verificar se o cliente mandou *nome completo*, *CPF* e *endere√ßo* ‚Äî todos na mesma mensagem.
          
          üîé Regras:
          
          1. Se a mensagem contiver:
             - Um nome (como "Felipe Belmont")
             - Um CPF (como "11485925711" ou "114.859.257-11")
             - Um endere√ßo (como "Rua das Neves - 360 - bairro")
          
          ‚û°Ô∏è Chame a fun√ß√£o **preAprovacao**.
          
          2. Se qualquer um desses elementos estiver ausente ou incompleto, chame **naoDeuDados**.
          
          ‚ö†Ô∏è N√£o tente adivinhar ou corrigir dados.
          ‚ö†Ô∏è Ignore frases como "quero comprar", "tem iPhone?", "meu CPF √© tal..." se n√£o estiverem os tr√™s dados juntos.
          
          Exemplos v√°lidos:
          - "Meu nome √© Jo√£o da Silva, CPF 12345678900, nasci em 02/10/1990"
          - "12345678900 Maria Souza 05091985"
          - "Carlos Mendes - 98765432100 - 01-01-1980"
          
          Exemplos inv√°lidos:
          - "Meu nome √© Jo√£o" ‚Üí (falta CPF e data)
          - "12345678900" ‚Üí (falta nome e endere√ßo)
          - "Tenho interesse em boleto" ‚Üí (n√£o √© dado)
          `
        },
        { role: "user", content: msgContent }
      ],
      functions,
      function_call: "auto",
      temperature: 0
    });

    const toolCall = completion.choices[0]?.message?.function_call;
    if (toolCall) {
      const { name, arguments: argsStr } = toolCall;
      const args = argsStr ? JSON.parse(argsStr) : {};
      if (handlers[name]) {
        return await handlers[name](sender, { ...args, msgContent, pushName });
      }
    }

    // fallback
    return await handlers.naoDeuDados(sender);
  } catch (err) {
    console.error("‚ùå Erro no openAiServicesBoletoDecisao2:", err);
    return await sendBotMessage(sender, "‚ö†Ô∏è Tive um problema ao processar seus dados. Pode repetir por favor?");
  }
};

module.exports = { openAiServicesBoletoDecisao2 };
